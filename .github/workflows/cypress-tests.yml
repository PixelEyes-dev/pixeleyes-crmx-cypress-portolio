name: Cypress Tests

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

# Add permissions for commenting on PRs
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests
        id: cypress
        uses: cypress-io/github-action@v6
        continue-on-error: true
        env:
          CYPRESS_USER_EMAIL: ${{ secrets.CYPRESS_USER_EMAIL }}
          CYPRESS_USER_PASSWORD: ${{ secrets.CYPRESS_USER_PASSWORD }}
        with:
          browser: chrome
          spec: cypress/e2e/authentication/userLogin.cy.js
          record: false

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ github.run_number }}
          path: cypress/screenshots
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos-${{ github.run_number }}
          path: cypress/videos
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-results-${{ github.run_number }}
          path: cypress/results
          if-no-files-found: ignore
          retention-days: 7

      - name: Comment test results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Check if screenshots exist
            const screenshotsPath = 'cypress/screenshots';
            let screenshotMessage = '';
            if (fs.existsSync(screenshotsPath)) {
              const screenshots = fs.readdirSync(screenshotsPath, { recursive: true });
              if (screenshots.length > 0) {
                screenshotMessage = '\n\n📸 **Screenshots captured:**\n';
                screenshots.forEach(screenshot => {
                  if (screenshot.endsWith('.png')) {
                    screenshotMessage += `- \`${screenshot}\`\n`;
                  }
                });
              }
            }

            // Check if videos exist
            const videosPath = 'cypress/videos';
            let videoMessage = '';
            if (fs.existsSync(videosPath)) {
              const videos = fs.readdirSync(videosPath);
              if (videos.length > 0) {
                videoMessage = '\n\n🎥 **Videos recorded:**\n';
                videos.forEach(video => {
                  if (video.endsWith('.mp4')) {
                    videoMessage += `- \`${video}\`\n`;
                  }
                });
              }
            }

            // Determine test status from the Cypress step's outcome
            const testOutcome = '${{ steps.cypress.outcome }}';
            const testStatus = testOutcome === 'success' ? '✅ Passed' : '❌ Failed';

            const message = `## 🧪 Cypress Test Results

            **Status:** ${testStatus}
            **Run Number:** #${context.runNumber}

            ${screenshotMessage}
            ${videoMessage}

            📦 **Artifacts available for download above**`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

      - name: Fail workflow if tests failed
        if: steps.cypress.outcome == 'failure'
        run: exit 1
