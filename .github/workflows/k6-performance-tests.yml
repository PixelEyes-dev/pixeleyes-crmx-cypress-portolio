name: k6 Performance Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'performance-tests/k6/**'
      - 'src/services/api/**'
      - 'src/integrations/supabase/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'performance-tests/k6/**'
      - 'src/services/api/**'
      - 'src/integrations/supabase/**'
  workflow_dispatch:

jobs:
  k6-performance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup k6
        run: |
          # Install k6 by downloading the binary directly
          sudo apt-get update
          sudo apt-get install -y wget
          wget -qO- https://github.com/grafana/k6/releases/download/v0.47.0/k6-v0.47.0-linux-amd64.tar.gz | sudo tar xvz --strip-components 1 -C /usr/local/bin

      - name: Verify k6 installation
        run: k6 version

      - name: Run k6 Authentication Performance Test
        env:
          SUPABASE_URL: ${{ secrets.CYPRESS_SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.CYPRESS_SUPABASE_ANON_KEY }}
          CYPRESS_USER_EMAIL: ${{ secrets.CYPRESS_USER_EMAIL }}
          CYPRESS_USER_PASSWORD: ${{ secrets.CYPRESS_USER_PASSWORD }}
          CYPRESS_USER2_EMAIL: ${{ secrets.CYPRESS_USER2_EMAIL }}
          CYPRESS_USER2_PASSWORD: ${{ secrets.CYPRESS_USER2_PASSWORD }}
          CYPRESS_USER3_EMAIL: ${{ secrets.CYPRESS_USER3_EMAIL }}
          CYPRESS_USER3_PASSWORD: ${{ secrets.CYPRESS_USER3_PASSWORD }}
        run: |
          mkdir -p performance-tests/k6/results
          k6 run --out json=performance-tests/k6/results/auth-results.json performance-tests/k6/auth-load-test.js

      - name: Validate Performance Results
        run: |
          node performance-tests/k6/scripts/validate-k6-results-simple.cjs performance-tests/k6/results/auth-results.json

      - name: Upload Performance Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: k6-performance-report
          path: performance-tests/k6/results/
          retention-days: 30

      - name: Comment PR with Performance Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const results = JSON.parse(fs.readFileSync('performance-tests/k6/results/auth-results.json', 'utf8'));
              const avgResponseTime = results.metrics.http_req_duration?.values?.avg?.toFixed(2) || 'N/A';
              const p95ResponseTime = results.metrics.http_req_duration?.values['p(95)']?.toFixed(2) || 'N/A';
              const errorRate = ((results.metrics.http_req_failed?.values?.rate || 0) * 100).toFixed(2);
              
              const comment = `## ðŸš€ Performance Test Results
              
              **Authentication API Performance:**
              - Average Response Time: ${avgResponseTime}ms
              - 95th Percentile: ${p95ResponseTime}ms
              - Error Rate: ${errorRate}%
              
              âœ… All performance thresholds met!`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not generate performance comment:', error.message);
            }
