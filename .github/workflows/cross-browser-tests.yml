name: Cross-Browser E2E Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  functional-tests:
    name: Cross-Browser Functional Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        browser: [chrome, firefox, edge]

    env:
      CYPRESS_ENVIRONMENT: production
      CYPRESS_BROWSER: ${{ matrix.browser }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "CYPRESS_USER_EMAIL=${{ secrets.CYPRESS_USER_EMAIL }}" > .env
          echo "CYPRESS_USER_PASSWORD=${{ secrets.CYPRESS_USER_PASSWORD }}" >> .env
          echo "CYPRESS_BASE_URL=https://www.crmx.mx" >> .env
          echo "CYPRESS_ENVIRONMENT=production" >> .env
          echo "SUPABASE_DB_HOST=${{ secrets.SUPABASE_DB_HOST }}" >> .env
          echo "SUPABASE_DB_PORT=${{ secrets.SUPABASE_DB_PORT }}" >> .env
          echo "SUPABASE_DB_NAME=${{ secrets.SUPABASE_DB_NAME }}" >> .env
          echo "SUPABASE_DB_USER=${{ secrets.SUPABASE_DB_USER }}" >> .env
          echo "SUPABASE_DB_PASSWORD=${{ secrets.SUPABASE_DB_PASSWORD }}" >> .env
          echo "SUPABASE_DB_SSL=${{ secrets.SUPABASE_DB_SSL }}" >> .env
          echo "CYPRESS_SUPABASE_URL=${{ secrets.CYPRESS_SUPABASE_URL }}" >> .env
          echo "CYPRESS_SUPABASE_ANON_KEY=${{ secrets.CYPRESS_SUPABASE_ANON_KEY }}" >> .env

      - name: Verify functional test setup
        run: |
          echo "🌐 Running functional tests on ${{ matrix.browser }}"
          echo "📋 Test spec: cypress/e2e/leads/crossBrowserLeadManagement.cy.js"
          echo "🎯 Environment: Production (https://www.crmx.mx)"
          echo "🔐 Using test credentials from GitHub secrets"

      - name: Run functional tests
        id: cypress-functional
        uses: cypress-io/github-action@v6
        continue-on-error: true
        with:
          browser: ${{ matrix.browser }}
          record: false
          config: video=true,screenshotOnRunFailure=true,screenshotsFolder=cypress/screenshots/cross-browser,videosFolder=cypress/videos/cross-browser
          spec: cypress/e2e/leads/crossBrowserLeadManagement.cy.js
          wait-on: 'https://www.crmx.mx'
          wait-on-timeout: 120

      - name: Upload functional test screenshots
        uses: actions/upload-artifact@v4
        if: steps.cypress-functional.outcome == 'failure'
        with:
          name: functional-screenshots-${{ matrix.browser }}-${{ github.run_number }}
          path: cypress/screenshots/cross-browser
          if-no-files-found: ignore
          retention-days: 14

      - name: Upload functional test videos
        uses: actions/upload-artifact@v4
        if: steps.cypress-functional.outcome == 'failure'
        with:
          name: functional-videos-${{ matrix.browser }}-${{ github.run_number }}
          path: cypress/videos/cross-browser
          if-no-files-found: ignore
          retention-days: 14

      - name: Comment functional test results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const functionalOutcome = '${{ steps.cypress-functional.outcome }}';
            const functionalStatus = functionalOutcome === 'success' ? '✅ Passed' : '❌ Failed';

            let messageBody = `**Browser:** ${{ matrix.browser }}\n`;
            messageBody += `**Functional Tests:** ${functionalStatus}\n`;
            messageBody += `**Run Number:** #${context.runNumber}`;

            if (functionalOutcome === 'failure') {
              const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
              messageBody += `\n\n📦 [**Download artifacts**](${artifactUrl})`;
              messageBody += `\n\n📊 **Available artifacts:**`;
              messageBody += `\n- Functional test screenshots/videos`;
            }

            const message = `## 🔧 Functional Test Results (${{ matrix.browser }})\n\n${messageBody}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

      - name: Fail workflow if functional tests failed
        if: steps.cypress-functional.outcome == 'failure'
        run: exit 1

  visual-regression-tests:
    name: Cross-Browser Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        browser: [chrome, firefox, edge]

    env:
      CYPRESS_ENVIRONMENT: production
      CYPRESS_BROWSER: ${{ matrix.browser }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "CYPRESS_USER_EMAIL=${{ secrets.CYPRESS_USER_EMAIL }}" > .env
          echo "CYPRESS_USER_PASSWORD=${{ secrets.CYPRESS_USER_PASSWORD }}" >> .env
          echo "CYPRESS_BASE_URL=https://www.crmx.mx" >> .env
          echo "CYPRESS_ENVIRONMENT=production" >> .env
          echo "SUPABASE_DB_HOST=${{ secrets.SUPABASE_DB_HOST }}" >> .env
          echo "SUPABASE_DB_PORT=${{ secrets.SUPABASE_DB_PORT }}" >> .env
          echo "SUPABASE_DB_NAME=${{ secrets.SUPABASE_DB_NAME }}" >> .env
          echo "SUPABASE_DB_USER=${{ secrets.SUPABASE_DB_USER }}" >> .env
          echo "SUPABASE_DB_PASSWORD=${{ secrets.SUPABASE_DB_PASSWORD }}" >> .env
          echo "SUPABASE_DB_SSL=${{ secrets.SUPABASE_DB_SSL }}" >> .env
          echo "CYPRESS_SUPABASE_URL=${{ secrets.CYPRESS_SUPABASE_URL }}" >> .env
          echo "CYPRESS_SUPABASE_ANON_KEY=${{ secrets.CYPRESS_SUPABASE_ANON_KEY }}" >> .env

      - name: Verify visual regression test setup
        run: |
          echo "🎨 Running visual regression tests on ${{ matrix.browser }}"
          echo "📋 Test spec: cypress/e2e/visual-regression/criticalUIStates.cy.js"
          echo "🎯 Environment: Production (https://www.crmx.mx)"
          echo "🔐 Using test credentials from GitHub secrets"
          echo "📸 Testing 12 critical UI states"

      - name: Run visual regression tests
        id: cypress-visual
        uses: cypress-io/github-action@v6
        continue-on-error: true
        with:
          browser: ${{ matrix.browser }}
          record: false
          config: video=true,screenshotOnRunFailure=true,screenshotsFolder=cypress/screenshots/cross-browser,videosFolder=cypress/videos/cross-browser
          spec: cypress/e2e/visual-regression/criticalUIStates.cy.js
          wait-on: 'https://www.crmx.mx'
          wait-on-timeout: 120

      - name: Upload visual regression screenshots
        uses: actions/upload-artifact@v4
        if: steps.cypress-visual.outcome == 'failure'
        with:
          name: visual-regression-screenshots-${{ matrix.browser }}-${{ github.run_number }}
          path: cypress/screenshots/cross-browser
          if-no-files-found: ignore
          retention-days: 14

      - name: Upload visual regression videos
        uses: actions/upload-artifact@v4
        if: steps.cypress-visual.outcome == 'failure'
        with:
          name: visual-regression-videos-${{ matrix.browser }}-${{ github.run_number }}
          path: cypress/videos/cross-browser
          if-no-files-found: ignore
          retention-days: 14

      - name: Comment visual regression test results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const visualOutcome = '${{ steps.cypress-visual.outcome }}';
            const visualStatus = visualOutcome === 'success' ? '✅ Passed' : '❌ Failed';

            let messageBody = `**Browser:** ${{ matrix.browser }}\n`;
            messageBody += `**Visual Regression Tests:** ${visualStatus}\n`;
            messageBody += `**UI States Tested:** 12 critical states\n`;
            messageBody += `**Run Number:** #${context.runNumber}`;

            if (visualOutcome === 'failure') {
              const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
              messageBody += `\n\n📦 [**Download artifacts**](${artifactUrl})`;
              messageBody += `\n\n📊 **Available artifacts:**`;
              messageBody += `\n- Visual regression screenshots/videos`;
            }

            const message = `## 🎨 Visual Regression Test Results (${{ matrix.browser }})\n\n${messageBody}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

      - name: Fail workflow if visual regression tests failed
        if: steps.cypress-visual.outcome == 'failure'
        run: exit 1
